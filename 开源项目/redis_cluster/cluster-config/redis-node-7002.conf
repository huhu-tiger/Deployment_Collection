#取消绑定ip，把 bind 127.0.0.1 注释

#bind 127.0.0.1

#修改保护模式为no，可以让非本机ip不加密码访问

protected-mode no



#修改redis为后台启动

daemonize no

#更改数据存储目录，方便管理

#dir /usr/local/myredis/rediscluster/node7000

#开启集群，取消注释

cluster-enabled yes

#取消注释并修改为对应名称

cluster-config-file nodes.conf

#集群超时参数，取消注释

cluster-node-timeout 15000

#修改为数据同步，改为aof备份

appendonly yes

#当主机和从机都down掉时，其它主节点是否可以写操作，no 可以，yes 不行，默认为yes。根据需求配置

#当主机和从机都down掉时并设置为no时，该主机所在槽位数据不可写。可能会造成数据丢失情况

# 以下三个配置参数静态设定节点的运行参数, 包括对外IP, 普通Redis命令端口和集群桥接端口

  


# Redis Cluster 不支持NATted环境和IP地址或TCP端口被重映射(remapped)的环境。

# Docker使用一种名叫port mapping的技术, 运行于Docker容器内的程序实际对外使用的端口和监听的端口可不相同. 为了让Docker 兼容Redis Cluster, 需要使用Docker的host network模式。

#为了使Redis集群在这样的环境中工作，静态每个节点都知道需要其公共地址的配置

cluster-announce-ip 172.22.220.21

# 客户端连接端口

cluster-announce-port 7002

 
# 总线端口为普通端口port+10000，所谓Cluster bus, 即使用一种二进制协议(binary protocol)进行集群内点对点(node-to-node)通讯, 包括节点失效检测, 配置更新, 故障转移(failover)认证等

cluster-announce-bus-port 17002

#修改为对应端口号

port 7002
#如果要设置密码需要增加如下配置：
 #(设置redis访问密码)
requirepass pass1234
 #(设置集群节点间访问密码，跟上面一致)
masterauth pass1234