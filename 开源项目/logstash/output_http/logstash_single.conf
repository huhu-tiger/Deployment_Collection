input {
  gelf {
    port => 12201
  }
}

filter {
  json {
    source => "message"
    skip_on_invalid_json => true
    target => "json_data"
    remove_field => [ "message" ]
  }
  if ![json_data] {
    drop{}
  }
  # mutate {
  #  add_field => {
  #      "[json][component]" => "%{[json_data][component]}"
  #      "[json][log]" => "%{[json_data][log]}"
  #  }
  #  remove_field => ["json_data"]
  # }
}

output {
  http {
    automatic_retries => 2
    connect_timeout => 60
    request_timeout => 180
    socket_timeout => 60
    format => message
    content_type => "application/json"
    http_method => post
    keepalive => true
    pool_max => 5
    pool_max_per_route => 1
    retry_failed => true
    retryable_codes => [429, 500, 502, 503, 504]
    ssl_enabled => false
    validate_after_inactivity => 180
    url => "http://172.17.0.1:8080/test/log_endpoint"
    message => "%{json_data}"
  }
  stdout { codec => rubydebug }  # 用于调试，生产环境可移除
}

